version: "3"

services:
  web:
    build: .
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    env_file:
      - .env # Use the .env file
    environment:
      - CELERY_BROKER_URL=amqp://guest@rabbitmq//
      - DJANGO_SETTINGS_MODULE=evreka_case1.settings

  celery:
    build: .
    command: celery -A evreka_case1 worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
    env_file:
      - .env # Use the .env file
    environment:
      - CELERY_BROKER_URL=amqp://guest@rabbitmq//
      - DJANGO_SETTINGS_MODULE=evreka_case1.settings

  db:
    image: mysql:8.0
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DB}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5673:5672"
      - "15673:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  tcp_server:
    build: .
    command: python tcp_tracking/tcp_server.py
    volumes:
      - .:/app
    depends_on:
      - web
      - rabbitmq
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=amqp://guest@rabbitmq//
      - DJANGO_SETTINGS_MODULE=evreka_case1.settings
    ports:
      - "9999:9999"
volumes:
  db_data:
  rabbitmq_data:
